import 'package:fl_chart/fl_chart.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutterhole/bloc/api/queries_over_time.dart';
import 'package:flutterhole/bloc/base/bloc.dart';
import 'package:flutterhole/model/api/queries_over_time.dart';
import 'package:flutterhole/widget/home/chart/my_line_chart.dart';
import 'package:flutterhole/widget/layout/error_message.dart';

final mockQueriesOverTime = QueriesOverTime(adsOverTime: {
  '1563991500000': 1,
  '1563992100000': 0,
  '1563992700000': 1,
  '1563993300000': 2,
  '1563993900000': 0,
  '1563994500000': 0,
  '1563995100000': 0,
  '1563995700000': 0,
  '1563996300000': 0,
  '1563996900000': 0,
  '1563997500000': 2,
  '1563998100000': 9,
  '1563998700000': 17,
  '1563999300000': 1,
  '1563999900000': 17,
  '1564000500000': 6,
  '1564001100000': 13,
  '1564001700000': 6,
  '1564002300000': 23,
  '1564002900000': 16,
  '1564003500000': 11,
  '1564004100000': 11,
  '1564004700000': 6,
  '1564005300000': 2,
  '1564005900000': 0,
  '1564006500000': 0,
  '1564007100000': 0,
  '1564007700000': 0,
  '1564008300000': 3,
  '1564008900000': 20,
  '1564009500000': 20,
  '1564010100000': 27,
  '1564010700000': 25,
  '1564011300000': 46,
  '1564011900000': 33,
  '1564012500000': 16,
  '1564013100000': 10,
  '1564013700000': 14,
  '1564014300000': 15,
  '1564014900000': 4,
  '1564015500000': 4,
  '1564016100000': 3,
  '1564016700000': 5,
  '1564017300000': 0,
  '1564017900000': 0,
  '1564018500000': 13,
  '1564019100000': 1,
  '1564019700000': 0,
  '1564020300000': 1,
  '1564020900000': 0,
  '1564021500000': 0,
  '1564022100000': 0,
  '1564022700000': 0,
  '1564023300000': 0,
  '1564023900000': 0,
  '1564024500000': 0,
  '1564025100000': 0,
  '1564025700000': 0,
  '1564026300000': 0,
  '1564026900000': 6,
  '1564027500000': 0,
  '1564028100000': 1,
  '1564028700000': 0,
  '1564029300000': 0,
  '1564029900000': 1,
  '1564030500000': 2,
  '1564031100000': 2,
  '1564031700000': 3,
  '1564032300000': 3,
  '1564032900000': 7,
  '1564033500000': 2,
  '1564034100000': 4,
  '1564034700000': 2,
  '1564035300000': 3,
  '1564035900000': 3,
  '1564036500000': 3,
  '1564037100000': 1,
  '1564037700000': 0,
  '1564038300000': 4,
  '1564038900000': 0,
  '1564039500000': 0,
  '1564040100000': 0,
  '1564040700000': 0,
  '1564041300000': 0,
  '1564041900000': 25,
  '1564042500000': 36,
  '1564043100000': 14,
  '1564043700000': 1,
  '1564044300000': 18,
  '1564044900000': 11,
  '1564045500000': 19,
  '1564046100000': 19,
  '1564046700000': 16,
  '1564047300000': 16,
  '1564047900000': 13,
  '1564048500000': 9,
  '1564049100000': 21,
  '1564049700000': 18,
  '1564050300000': 10,
  '1564050900000': 15,
  '1564051500000': 9,
  '1564052100000': 15,
  '1564052700000': 15,
  '1564053300000': 15,
  '1564053900000': 13,
  '1564054500000': 22,
  '1564055100000': 10,
  '1564055700000': 7,
  '1564056300000': 10,
  '1564056900000': 15,
  '1564057500000': 20,
  '1564058100000': 12,
  '1564058700000': 12,
  '1564059300000': 5,
  '1564059900000': 5,
  '1564060500000': 12,
  '1564061100000': 4,
  '1564061700000': 15,
  '1564062300000': 8,
  '1564062900000': 11,
  '1564063500000': 12,
  '1564064100000': 7,
  '1564064700000': 5,
  '1564065300000': 9,
  '1564065900000': 6,
  '1564066500000': 7,
  '1564067100000': 5,
  '1564067700000': 6,
  '1564068300000': 10,
  '1564068900000': 24,
  '1564069500000': 7,
  '1564070100000': 10,
  '1564070700000': 8,
  '1564071300000': 17,
  '1564071900000': 11,
  '1564072500000': 6,
  '1564073100000': 10,
  '1564073700000': 7,
  '1564074300000': 7,
  '1564074900000': 13
}, domainsOverTime: {
  '1563991500000': 122,
  '1563992100000': 97,
  '1563992700000': 75,
  '1563993300000': 79,
  '1563993900000': 25,
  '1563994500000': 13,
  '1563995100000': 14,
  '1563995700000': 25,
  '1563996300000': 10,
  '1563996900000': 83,
  '1563997500000': 74,
  '1563998100000': 68,
  '1563998700000': 90,
  '1563999300000': 33,
  '1563999900000': 83,
  '1564000500000': 32,
  '1564001100000': 53,
  '1564001700000': 54,
  '1564002300000': 87,
  '1564002900000': 72,
  '1564003500000': 43,
  '1564004100000': 31,
  '1564004700000': 41,
  '1564005300000': 20,
  '1564005900000': 43,
  '1564006500000': 63,
  '1564007100000': 44,
  '1564007700000': 21,
  '1564008300000': 18,
  '1564008900000': 89,
  '1564009500000': 52,
  '1564010100000': 59,
  '1564010700000': 50,
  '1564011300000': 74,
  '1564011900000': 69,
  '1564012500000': 41,
  '1564013100000': 35,
  '1564013700000': 38,
  '1564014300000': 76,
  '1564014900000': 49,
  '1564015500000': 42,
  '1564016100000': 33,
  '1564016700000': 28,
  '1564017300000': 19,
  '1564017900000': 11,
  '1564018500000': 52,
  '1564019100000': 12,
  '1564019700000': 21,
  '1564020300000': 19,
  '1564020900000': 14,
  '1564021500000': 0,
  '1564022100000': 7,
  '1564022700000': 1,
  '1564023300000': 0,
  '1564023900000': 4,
  '1564024500000': 6,
  '1564025100000': 1,
  '1564025700000': 2,
  '1564026300000': 1,
  '1564026900000': 26,
  '1564027500000': 4,
  '1564028100000': 5,
  '1564028700000': 0,
  '1564029300000': 2,
  '1564029900000': 10,
  '1564030500000': 4,
  '1564031100000': 11,
  '1564031700000': 7,
  '1564032300000': 5,
  '1564032900000': 11,
  '1564033500000': 9,
  '1564034100000': 10,
  '1564034700000': 15,
  '1564035300000': 16,
  '1564035900000': 5,
  '1564036500000': 13,
  '1564037100000': 1,
  '1564037700000': 5,
  '1564038300000': 10,
  '1564038900000': 4,
  '1564039500000': 0,
  '1564040100000': 1,
  '1564040700000': 0,
  '1564041300000': 3,
  '1564041900000': 71,
  '1564042500000': 125,
  '1564043100000': 77,
  '1564043700000': 16,
  '1564044300000': 136,
  '1564044900000': 65,
  '1564045500000': 69,
  '1564046100000': 58,
  '1564046700000': 58,
  '1564047300000': 36,
  '1564047900000': 39,
  '1564048500000': 17,
  '1564049100000': 44,
  '1564049700000': 51,
  '1564050300000': 43,
  '1564050900000': 31,
  '1564051500000': 25,
  '1564052100000': 30,
  '1564052700000': 34,
  '1564053300000': 42,
  '1564053900000': 25,
  '1564054500000': 42,
  '1564055100000': 36,
  '1564055700000': 27,
  '1564056300000': 43,
  '1564056900000': 45,
  '1564057500000': 58,
  '1564058100000': 41,
  '1564058700000': 36,
  '1564059300000': 21,
  '1564059900000': 29,
  '1564060500000': 50,
  '1564061100000': 13,
  '1564061700000': 28,
  '1564062300000': 53,
  '1564062900000': 38,
  '1564063500000': 46,
  '1564064100000': 34,
  '1564064700000': 30,
  '1564065300000': 27,
  '1564065900000': 25,
  '1564066500000': 25,
  '1564067100000': 31,
  '1564067700000': 25,
  '1564068300000': 34,
  '1564068900000': 70,
  '1564069500000': 26,
  '1564070100000': 19,
  '1564070700000': 30,
  '1564071300000': 59,
  '1564071900000': 84,
  '1564072500000': 46,
  '1564073100000': 54,
  '1564073700000': 40,
  '1564074300000': 63,
  '1564074900000': 69
});

class QueriesOverTimeChartBuilder extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    final QueriesOverTimeBloc queriesOverTimeBloc =
        BlocProvider.of<QueriesOverTimeBloc>(context);
    return BlocBuilder(
      bloc: queriesOverTimeBloc,
      builder: (context, state) {
        if (state is BlocStateSuccess<QueriesOverTime>) {
          final queriesOverTime = state.data;

          List<FlSpot> domainSpots = [];
          List<FlSpot> adSpots = [];
          double maxY = 0;

          int index = 0;
          queriesOverTime.domainsOverTime.forEach((String str, int hits) {
            if (hits.toDouble() > maxY) maxY = hits.toDouble();

            domainSpots.add(FlSpot(
                index.toDouble() *
                    (2400 / queriesOverTime.domainsOverTime.length),
                hits.toDouble()));
            index++;
          });

          index = 0;
          queriesOverTime.adsOverTime.forEach((String str, int hits) {
            if (hits.toDouble() > maxY) maxY = hits.toDouble();

            adSpots.add(FlSpot(
                index.toDouble() * (2400 / queriesOverTime.adsOverTime.length),
                hits.toDouble()));
            index++;
          });

          return MyLineChart(
            greenSpots: domainSpots,
//            greenSpots: domainSpots..removeLast(),
            redSpots: adSpots,
//            redSpots: adSpots..removeLast(),
            maxY: maxY,
          );
        }
        if (state is BlocStateError<QueriesOverTime>) {
          return ErrorMessage(errorMessage: state.e.message);
        }
        return Center(
            child: Column(children: <Widget>[
          Text('Oh no!'),
          CircularProgressIndicator(),
          Text(state.toString()),
          Text(state.runtimeType.toString()),
        ]));
      },
    );
  }
}
